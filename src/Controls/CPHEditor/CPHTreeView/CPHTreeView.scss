@keyframes treeview-spin {
  0% { transform: rotate(0deg); opacity: 1.0; }
  50% { transform: rotate(180deg); opacity: 0.5; }
  100% { transform: rotate(360deg); opacity: 1.0; }
}

.treeview-dragging {
  font-family: -apple-system, Arial;
  display: flex;
  align-items: center;
  padding: $half-unit $size-x-small;
  background-color: $white;
  box-shadow: $strong-shadow;
  margin-left: $size-small;
  border-radius: $base-radius;
  opacity: 0.4;
  & > span.icon {
    flex-shrink: 0;
    width: $size-x-small + $half-unit;
    height: $size-x-small + $half-unit;
    position: relative;
    &.folder {
      color: $blue-light !important;
      & > svg {
        fill: currentColor;
        stroke-width: 0;
      }
    }
    &.red { color: $red-main !important; }
    &.green { color: $green-main !important; }
    &.blue { color: $blue-main !important; }
    &.orange { color: $orange-main !important; }
    &.purple { color: $purple-main !important; }
    &.red-light { color: $red-light !important; }
    &.green-light { color: $green-light !important; }
    &.blue-light { color: $blue-light !important; }
    &.orange-light { color: $orange-light !important; }
    &.purple-light { color: $purple-light !important; }
    &.spin > svg { animation: treeview-spin 1.5s ease-in-out infinite; }
    &.stroke > svg { stroke-width: 3; fill: none; }
    &.move, &.copy {
      color: $green-main;
      & > svg {
        stroke-width: 3;
      }
    }
    & > svg, & > img {
      width: 100%;
      height: 100%;
    }
  }
  & > span.name {
    flex-shrink: 0;
    flex-grow: 1;
    font-size: 12px;
    white-space: nowrap;
  }
  &[data-drop-action="move"],
  &[data-drop-action="copy"] {
    opacity: 1.0;
  }
  &:not([data-drop-action="move"]) {
    & > span.move {
      display: none;
    }
  }
  &:not([data-drop-action="copy"]) {
    & > span.copy {
      display: none;
    }
  }
  & > span {
    margin-right: $half-unit;
  }
}

control[control="CPHTreeView"] {

  font-family: -apple-system, Arial;

  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;

  font-size: 12px;
  color: $grey-x-dark;

  * {
    box-sizing: border-box;
    user-select: none;
  }

  & > div.files {

    position: absolute;
    width: 100%;
    height: 100%;
    overflow: auto;

    .directory-group {
      &[data-open="true"] {
        span.icon.open {
          display: block;
        }
        span.icon.closed {
          display: none;
        }
      }
      &:not([data-open="true"]) {
        & > .file, & > .directory-group, & > .temporary {
          display: none;
        }
        span.icon.open {
          display: none;
        }
        span.icon.closed {
          display: block;
        }
      }
    }

    .directory-group[data-selected] > .directory,
    .file[data-selected] {
      color: $blue-main;
      .icon {
        color: $blue-main;
      }
    }

    .directory-group[data-drop="true"] {
      & > .directory, & > .file, & > .file[data-selected] {
        background-color: $green-x-light;
      }
    }

    .file[data-selected] {
      background-color: $blue-x-light;
    }

    .directory, .file, .temporary {
      display: flex;
      align-items: center;
      padding: $size-x-small 0px;
      cursor: pointer;
      vertical-align: text-top;
      border-radius: $base-radius;
      overflow: hidden;
      &:not(.temporary):hover, &.highlight {
        background-color: $blue-x-light;
      }
      &.modified {
        color: $orange-dark;
        span.icon > svg {
          color: $orange-dark !important;
        }
      }
      &.readonly {
        color: $grey-main;
        span.icon {
          color: $grey-light !important;
        }
      }
      span.pre {
        display: inline-block;
        width: $size-small;
        flex-shrink: 0;
      }
      span.icon {
        flex-shrink: 0;
        width: $size-x-small + $half-unit;
        height: $size-x-small + $half-unit;
        margin-left: $half-unit;
        position: relative;
        display: inline-block;
        color: $grey-main;
        &.folder {
          color: $blue-light !important;
          & > svg {
            fill: currentColor;
            stroke: currentColor;
            stroke-width: 0;
          }
        }
        &.red { color: $red-main !important; }
        &.green { color: $green-main !important; }
        &.blue { color: $blue-main !important; }
        &.orange { color: $orange-main !important; }
        &.purple { color: $purple-main !important; }
        &.red-light { color: $red-light !important; }
        &.green-light { color: $green-light !important; }
        &.blue-light { color: $blue-light !important; }
        &.orange-light { color: $orange-light !important; }
        &.purple-light { color: $purple-light !important; }
        &.spin > svg { animation: treeview-spin 1.5s ease-in-out infinite; }
        &.stroke > svg { stroke-width: 3; fill: none; }
        & > svg, & > img {
          width: 100%;
          height: 100%;
          position: absolute;
        }
        &.loading {
          display: none;
          animation: cph-loading-spin 1.5s ease-in-out infinite;
          color: $blue-main;
        }
      }
      &[data-loading] {
        & > span.icon.loading {
          display: flex;
        }
        & > span.icon.not-loading {
          display: none;
        }
      }
      span.name {
        margin-left: $half-unit;
        word-wrap: break-word;
        overflow: hidden;
      }
      span.spacer {
        flex-grow: 1;
      }
      span.description {
        padding: 0px $size-x-small;
        font-size: 10px;
        opacity: 0.5;
      }
      span.user {
        flex-shrink: 0;
        margin: (-$half-unit) 0px;
        margin-left: $half-unit;
        width: $size-small;
        height: $size-small;
        color: $editor-caret-color;
        background-color: $white;
        border-radius: 1000px;
        display: inline-block;
        position: relative;
        &.self {
          z-index: 1;
        }
        &:after {
          display: block;
          position: absolute;
          content: '';
          bottom: -3px;
          right: -3px;
          width: 6px;
          height: 6px;
          border-radius: 1000px;
          background-color: currentColor;
          border: 2px solid $white;
        }
        & > img {
          position: absolute;
          width: 100%;
          height: 100%;
          border-radius: 1000px;
          object-fit: cover;
        }
        & + span.user {
          margin-left: -$half-unit * (3 / 2);
        }
        &:last-child {
          margin-right: $size-x-small;
        }
      }
    }

    .temporary {
      margin-top: $size-small;
      cursor: inherit;
    }

  }

}
